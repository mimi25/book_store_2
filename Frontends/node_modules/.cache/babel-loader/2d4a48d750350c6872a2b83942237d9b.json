{"ast":null,"code":"import { GET_ERRORS } from \"./types\";\nimport axios from \"axios\";\nexport var registerUser = function registerUser(user, history) {\n  return function (dispatch) {\n    console.log(\"yo\");\n    axios.post(\"/api/users/register\", user).then(function (res) {\n      return history.push(\"./login\");\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var loginUser = function loginUser(user) {\n  return function (dispatch) {\n    axios.post(\"api/users/login\", user).then(function (res) {\n      console.log(res.data);\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // So, from this file, we will send an AJAX request to the node.js server.\n// We can not write this code inside Reducer because otherwise,\n// it is a violation of pure function. So we need to write any database operations\n// from actions. If we get any errors, then we dispatch the actions and\n// reducer will handle that for us.","map":{"version":3,"sources":["/home/findev/Documents/projet1/book-store/Frontend/src/actions/LogActions.js"],"names":["GET_ERRORS","axios","registerUser","user","history","dispatch","console","log","post","then","res","push","catch","err","type","payload","response","data","loginUser"],"mappings":"AAAA,SAASA,UAAT,QAA2B,SAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,OAAP;AAAA,SAAmB,UAAAC,QAAQ,EAAI;AACzDC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAN,IAAAA,KAAK,CACFO,IADH,CACQ,qBADR,EAC+BL,IAD/B,EAEGM,IAFH,CAEQ,UAAAC,GAAG;AAAA,aAAIN,OAAO,CAACO,IAAR,CAAa,SAAb,CAAJ;AAAA,KAFX,EAGGC,KAHH,CAGS,UAAAC,GAAG,EAAI;AACZR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEd,UADC;AAEPe,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CAAR;AAID,KARH;AASD,GAX2B;AAAA,CAArB;AAaP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAf,IAAI;AAAA,SAAI,UAAAE,QAAQ,EAAI;AAC3CJ,IAAAA,KAAK,CACFO,IADH,CACQ,iBADR,EAC2BL,IAD3B,EAEGM,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACO,IAAhB;AACD,KAJH,EAKGL,KALH,CAKS,UAAAC,GAAG,EAAI;AACZR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEd,UADC;AAEPe,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,OAAD,CAAR;AAID,KAVH;AAWD,GAZ4B;AAAA,CAAtB,C,CAcP;AACA;AACA;AACA;AACA","sourcesContent":["import { GET_ERRORS } from \"./types\";\nimport axios from \"axios\";\n\nexport const registerUser = (user, history) => dispatch => {\n  console.log(\"yo\");\n  axios\n    .post(\"/api/users/register\", user)\n    .then(res => history.push(\"./login\"))\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const loginUser = user => dispatch => {\n  axios\n    .post(\"api/users/login\", user)\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\n// So, from this file, we will send an AJAX request to the node.js server.\n// We can not write this code inside Reducer because otherwise,\n// it is a violation of pure function. So we need to write any database operations\n// from actions. If we get any errors, then we dispatch the actions and\n// reducer will handle that for us.\n"]},"metadata":{},"sourceType":"module"}